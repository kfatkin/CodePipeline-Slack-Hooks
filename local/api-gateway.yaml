swagger: '2.0'
info:
  version: '2018-06-25T17:29:23Z'
  title: 'ApiGatewayTitle'
host: '122312.execute-api.us-east-1.amazonaws.com'
basePath: '/test'
schemes:
  - 'https'
paths:
  /{proxy+}:
    options:
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      responses:
        200:
          description: '200 response'
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: 'string'
            Access-Control-Allow-Methods:
              type: 'string'
            Access-Control-Allow-Headers:
              type: 'string'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: 'when_no_match'
        type: 'mock'
    x-amazon-apigateway-any-method:
      produces:
        - 'application/json'
      parameters:
        - name: 'proxy'
          in: 'path'
          required: true
          type: 'string'
      responses: {}
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:880392359248:function:SampleFunction:test/invocations'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        cacheNamespace: 'tx0gbo'
        cacheKeyParameters:
          - 'method.request.path.proxy'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
definitions:
  Empty:
    type: 'object'
    title: 'Empty Schema'
